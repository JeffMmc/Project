package se206_a3;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.Timer;

import uk.co.caprica.vlcj.component.EmbeddedMediaPlayerComponent;
import uk.co.caprica.vlcj.discovery.NativeDiscovery;

public class ButtonFeatures {
	private final JFrame frame;
	//Fields
	private String mediapath="";
	private static JFileChooser fileSelector ;
	private static File videoFile;
    private final EmbeddedMediaPlayerComponent mediaPlayerComponent;
    JPanel contentPane = new JPanel(new BorderLayout());
    JButton pauseButton = new JButton("Pause");
    JPanel controlsPane = new JPanel();
    JButton  skipBackwardButton = new JButton("Back");
    JButton  skipForwardButton = new JButton("Skip");
    JButton  openButton = new JButton("Open");
    JButton muteButton = new JButton("Mute");
    Timer forwardTimer, backwardTimer;
    int forwardSpeed = 2500, backwardSpeed = -2500;
    
    public static void main(final String[] args) {
        new NativeDiscovery().discover();
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Tutorial(args);
            }
        });
    }

    public ButtonFeatures(String[] args) {    	
    	fileSelector = new JFileChooser();
        frame = new JFrame("Media Player");
        frame.setBounds(100, 100, 1280, 720);
        frame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        frame.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                mediaPlayerComponent.release();
                System.exit(0);
            }
        });
        
        mediaPlayerComponent = new EmbeddedMediaPlayerComponent();
        
        //Open file
        openButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
            	File selectedFile = null;
            	fileSelector.setSelectedFile(null);
            	fileSelector.setFileSelectionMode(JFileChooser.FILES_ONLY);
        		fileSelector.showSaveDialog(null);
        		selectedFile = fileSelector.getSelectedFile();
        		mediaPlayerComponent.getMediaPlayer().mute(false);
        		if (selectedFile.exists() ){
        			videoFile = selectedFile;
        			mediapath = videoFile.getAbsolutePath();
        			mediaPlayerComponent.getMediaPlayer().playMedia(mediapath);
        		}
            	mediaPlayerComponent.getMediaPlayer().mute(false);
            }
        });
        controlsPane.add(openButton);
        
        //Play and pause
        pauseButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
            	if(forwardTimer.isRunning()){
            		forwardTimer.stop();
            	}else if(backwardTimer.isRunning()){
            		backwardTimer.stop();
            	}
            	mediaPlayerComponent.getMediaPlayer().mute(false);
            	
            	if (pauseButton.getText().equals("Pause")){
            		pauseButton.setText("Resume");
            		mediaPlayerComponent.getMediaPlayer().pause();
            	}else if(pauseButton.getText().equals("Resume")){
            		pauseButton.setText("Pause");
            		mediaPlayerComponent.getMediaPlayer().play();
            	}
            	
            }
        });
        controlsPane.add(pauseButton);
        
        //Mute
        muteButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
            	mediaPlayerComponent.getMediaPlayer().mute();
            }
        });
        controlsPane.add( muteButton);
        
        //Skip backward
        backwardTimer = new Timer(500, new ActionListener() {
        	public void actionPerformed(ActionEvent e){
        		mediaPlayerComponent.getMediaPlayer().skip(backwardSpeed);
            }
        });
        skipBackwardButton .addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
            	if (forwardTimer.isRunning()){
            		forwardTimer.stop();
            	}
            	pauseButton.setText("Resume");
            	mediaPlayerComponent.getMediaPlayer().mute(true);
            	
            	if(!backwardTimer.isRunning()){
            		backwardSpeed = -2500;
            	}else{
            		if(backwardSpeed < -30000){
            			backwardSpeed = backwardSpeed - 2500;
            		}else{
            			backwardSpeed = -2500;
            		}
            	}
            	backwardTimer.start();
            	
            }
        });
        controlsPane.add(skipBackwardButton);
        
        
        //Skip forward
        forwardTimer = new Timer(500, new ActionListener() {
        	public void actionPerformed(ActionEvent e){
        		mediaPlayerComponent.getMediaPlayer().skip( forwardSpeed);
            }
        });
        skipForwardButton .addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
            	if (backwardTimer.isRunning()){
            		backwardTimer.stop();
            	}
            	pauseButton.setText("Resume");
            	mediaPlayerComponent.getMediaPlayer().mute(true);
            	
            	if(!forwardTimer.isRunning()){
            		forwardSpeed = 2500;
            	}else{
            		if(forwardSpeed < 30000){
            			forwardSpeed = forwardSpeed + 2500;
            		}else{
            			forwardSpeed = 2500;
            		}
            	}
            	forwardTimer.start();
            }
        });
        controlsPane.add(skipForwardButton);
        
        
        contentPane.add(mediaPlayerComponent, BorderLayout.CENTER);
        contentPane.add(controlsPane, BorderLayout.SOUTH);
        
        frame.setContentPane(contentPane);
        frame.setVisible(true);
}
}
